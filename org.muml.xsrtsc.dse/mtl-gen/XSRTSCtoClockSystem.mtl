[comment encoding = UTF-8 /]

[module generate('http://fr.inria.aoste.timemodel.ccslmodel.clockexpressionandrelation', 
	'http://www.eclipse.org/emf/2002/Ecore', 
	'http://org.gemoc.moccml/1.0', 
	'http://fr.inria.aoste.timemodel',
	'http://org.gemoc.moccml.fsmmodel/1.0',
	) ]

[template public generate(aRealtimestatechart : Realtimestatechart)]
[comment @main/]
[file (aRealtimestatechart.name+'_withMoC-.clocksystem', false, 'UTF-8')]

"Some global constants"
|system moccmllibs ccsllibs|
"MoCCML librairies specifications" 

	"CCSL librairies specifications"


"Instanciation" 


system := ClockSystem named: '[aRealtimestatechart.name/]_withMoC-'.
system addLibrary:moccmllibs asDictionary.
"system addLibs:ccsllibs asDictionary."

[for (element : rtsc::Realtimestatechart| aRealtimestatechart.eAllContents(rtsc::Realtimestatechart))]
"clocks for Realtimestatechart [element.name/]" 
system addClocks: #(stepIt[element.name/]).

[/for]
[for (element : rtsc::Transition| aRealtimestatechart.eAllContents(rtsc::Transition))]
"clocks for Transition [element.name/]" 
system addClocks: #(fireIt[element.name/]).
system addClocks: #(canFire[element.name/]).
system addClocks: #(canFireTrue[element.name/]).
system addClocks: #(canFireFalse[element.name/]).

[/for]

[for (element : rtsc::Realtimestatechart| aRealtimestatechart.eAllContents(rtsc::Realtimestatechart))]
"relations for Realtimestatechart [element.name/]" 
	"evaluateSameTime in Realtimestatechart [element.name/]"
		[if ( true) ]
	system library: #Kernel relation: #Coincides clocks: #() .
		[/if]
	"onlyOneFire in Realtimestatechart [element.name/]"
		[if ( true) ]
	system library: #Kernel relation: #Exclusion clocks: #() .
		[/if]
	"evaluateEachStep in Realtimestatechart [element.name/]"
		[if ( true) ]
	system library: #Kernel relation: #Coincides clocks: #() .
		[/if]
[/for]
[for (element : rtsc::Transition| aRealtimestatechart.eAllContents(rtsc::Transition))]
"relations for Transition [element.name/]" 
	"evaluateCanfire in Transition [element.name/]"
	[if ( true) ]
	system
		library: #rtsc
		relation: #EvalBooleanDef
		clocks: #(    )
		constants: {}
		variables: {}.
	[/if]

	"fireIfCanFire in Transition [element.name/]"
		[if ( true) ]
	system library: #Kernel relation: #Coincides clocks: #(  ) .
		[/if]
[/for]
[/file]
[file ('ClkSysFunctionTest.clocksystem', false, 'UTF-8')]
SimpleSDF example1 system
[/file]


[/template]



