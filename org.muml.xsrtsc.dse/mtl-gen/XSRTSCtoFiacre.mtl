[comment encoding = UTF-8 /]

[module generate('http://fr.inria.aoste.timemodel.ccslmodel.clockexpressionandrelation', 
	'http://www.eclipse.org/emf/2002/Ecore', 
	'http://org.gemoc.moccml/1.0', 
	'http://fr.inria.aoste.timemodel',
	'http://org.gemoc.moccml.fsmmodel/1.0',
	'http://www.eclipse.org/xtend', 
	'http://www.eclipse.org/xtend/RichString', 
	'http://www.eclipse.org/xtext/xbase/Xbase',
	) ]
[template public generate(aRealtimestatechart : Realtimestatechart)]
[comment @main/]
[file (aRealtimestatechart.name+'_FiacreProcess.fcr', false, 'UTF-8')]
// *********************** Type Declaration ******************************/
const NUMBER_Behaviors : int is [aRealtimestatechart.eAllContents(Behavior)->size()/]
const NUMBER_BehavioralElements : int is [aRealtimestatechart.eAllContents(BehavioralElement)->size()/]
const NUMBER_Realtimestatecharts : int is [aRealtimestatechart.eAllContents(Realtimestatechart)->size()/]
const NUMBER_States : int is [aRealtimestatechart.eAllContents(State)->size()/]
const NUMBER_Transitions : int is [aRealtimestatechart.eAllContents(Transition)->size()/]
const NUMBER_Vertexs : int is [aRealtimestatechart.eAllContents(Vertex)->size()/]
const NUMBER_Guards : int is [aRealtimestatechart.eAllContents(Guard)->size()/]
const NUMBER_ClockConstraints : int is [aRealtimestatechart.eAllContents(ClockConstraint)->size()/]
const NUMBER_Variables : int is [aRealtimestatechart.eAllContents(Variable)->size()/]
const NUMBER_Clocks : int is [aRealtimestatechart.eAllContents(Clock)->size()/]



/*********************************************************************
Defining the Functions for : Realtimestatechart
**********************************************************************/
/*********************************************************************
Defining the Functions for : Transition
**********************************************************************/
/************************* Realtimestatechart Process Instances***************************/
[for (element : Realtimestatechart| aRealtimestatechart.eAllContents(Realtimestatechart))]
process p[element.name/] ['['/][element.name/]_stepIt:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:Realtimestatechart
    from s0  [element.name/]_stepIt; global:=Realtimestatechart_step( global , global.refToElement_id) ;  to s0
[/for]
/************************* Transition Process Instances***************************/
[for (element : Transition| aRealtimestatechart.eAllContents(Transition))]
process p[element.name/] ['['/][element.name/]_fireIt:in none[element.name/]_canFire:in none,[element.name/]_canFireTrue:in none,[element.name/]_canFireFalse:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:Transition
    from s0  [element.name/]_fireIt; global:=Transition_fire( global , global.refToElement_id) ;  to s0
[/for]
process pUnConstrainedSemantics['['/][for (element : Realtimestatechart| aRealtimestatechart.eAllContents(Realtimestatechart))]
[element.name/]_stepIt:out none,[/for][for (element : Transition| aRealtimestatechart.eAllContents(Transition))]
[element.name/]_fireIt:out none,[element.name/]_canFire:out none,[element.name/]_canFireTrue:out none,[element.name/]_canFireFalse:out none,[/for][']'/] is
	states s0
[for (element : Realtimestatechart| aRealtimestatechart.eAllContents(Realtimestatechart))]
    from s0  [element.name/]_stepIt;  to s0

[/for]
[for (element : Transition| aRealtimestatechart.eAllContents(Transition))]
    from s0  [element.name/]_fireIt;  to s0

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : Realtimestatechart| aRealtimestatechart.eAllContents(Realtimestatechart))]
[element.name/]_stepIt:out none,[/for][for (element : Transition| aRealtimestatechart.eAllContents(Transition))]
[element.name/]_fireIt:out none,[element.name/]_canFire:out none,[element.name/]_canFireTrue:out none,[element.name/]_canFireFalse:out none,[/for][']'/] is
	
	states s0
[for (element : Realtimestatechart| aRealtimestatechart.eAllContents(Realtimestatechart))]
    from s0  [element.name/]_stepIt;  to s0

[/for]
[for (element : Transition| aRealtimestatechart.eAllContents(Transition))]
    from s0  [element.name/]_fireIt;  to s0

[/for]
[/file]
/******************** Process Parallelization for Realtimestatechart******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : Realtimestatechart| aRealtimestatechart.eAllContents(Realtimestatechart))]
[element.name/]_stepIt: none,

[/for][for (element : Transition| aRealtimestatechart.eAllContents(Transition))]
[element.name/]_fireIt: none,
[element.name/]_canFire: none,[element.name/]_canFireTrue: none,[element.name/]_canFireFalse: none,

[/for]

par

pUnConstrainedSemantics['['/][for (element : Realtimestatechart| aRealtimestatechart.eAllContents(Realtimestatechart))]
[element.name/]_stepIt,[/for][for (element : Transition| aRealtimestatechart.eAllContents(Transition))]
[element.name/]_fireIt[element.name/]_canFire,[element.name/]_canFireTrue,[element.name/]_canFireFalse,[/for][']'/]
[for (element : Realtimestatechart| aRealtimestatechart.eAllContents(Realtimestatechart))]
|| p[element.name/] ['['/][element.name/]_stepIt[']'/] (&global, ID)
[/for]
[for (element : Transition| aRealtimestatechart.eAllContents(Transition))]
|| p[element.name/] ['['/][element.name/]_fireIt[element.name/]_canFire,[element.name/]_canFireTrue,[element.name/]_canFireFalse[']'/] (&global, ID)
[/for]
end par
sys 
[/file]
[/template]
